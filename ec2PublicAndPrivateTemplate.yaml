---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'The objective of the task is to understand how security group controls traffic to AWS resources (example, SSH access to EC2).
  Create two EC2 instances with names say, myEC2-public-access (alias s1)and myEC2-private-access (alias s2).
  We want to SSH into S2. The scenario is that we should be able to SSH directly into S1 from our local machine but we should not be able to SSH into S2 directly from our local machine.
  The solution should be designed such that we SSH into S1 and then we SSH into S2 from inside S1. So, S1 has the privileage to SSH into S2 but local machine doesn not.'
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    
Resources:
  EC2InstancePublicAccess:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        -
          !GetAtt EC2PublicAccessSecurityGroup.GroupId
      KeyName: !Ref KeyName
      SubnetId: subnet-c6c1e6a2
      ImageId: ami-07d0cf3af28718ef8
      Tags:
        - Key: username
          Value: Shubhangini
        - Key: BizUnit
          Value: DataGrokr

  EC2InstancePrivateAccess:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        -
          !GetAtt EC2PrivateAccessSecurityGroup.GroupId
      KeyName: !Ref KeyName
      SubnetId: subnet-c6c1e6a2
      ImageId: ami-07d0cf3af28718ef8
      Tags:
        - Key: username
          Value: Shubhangini
        - Key: BizUnit
          Value: DataGrokr

  EC2PublicAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort
        CidrIp: 0.0.0.0/0

  EC2PrivateAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via public instance
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort
        CidrIp: 172.31.0.0/16 
Outputs:
  PublicInstanceId:
    Description: InstanceId of public EC2 instance
    Value:
      Ref: EC2InstancePublicAccess
  PrivateInstanceId:
    Description: InstanceId of private EC2 instance
    Value:
      Ref: EC2InstancePrivateAccess    
     
  PublicInstanceAvailabilityZone:
    Description: Availability Zone of public EC2 instance
    Value:
      Fn::GetAtt:
      - EC2InstancePublicAccess
      - AvailabilityZone
  PrivateInstanceAvailabilityZone:
    Description: Availability Zone of private EC2 instance
    Value:
      Fn::GetAtt:
      - EC2InstancePrivateAccess
      - AvailabilityZone    
      
  PublicInstancePublicDNS:
    Description: Public DNSName of public EC2 instance
    Value:
      Fn::GetAtt:
      - EC2InstancePublicAccess
      - PublicDnsName
  PrivateInstancePublicDNS:
    Description: Public DNSName of private EC2 instance
    Value:
      Fn::GetAtt:
      - EC2InstancePrivateAccess
      - PublicDnsName    
      
  PublicInstancePublicIP:
    Description: Public IP address of public EC2 instance
    Value:
      Fn::GetAtt:
      - EC2InstancePublicAccess
      - PublicIp
  PublicInstancePublicIP:
    Description: Public IP address of private EC2 instance
    Value:
      Fn::GetAtt:
      - EC2InstancePrivateAccess
      - PublicIp    
      